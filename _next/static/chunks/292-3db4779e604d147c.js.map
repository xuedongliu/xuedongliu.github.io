{"version":3,"file":"static/chunks/292-3db4779e604d147c.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/.pnpm/react-use@17.5.1_react-dom@18.0.0_react@18.0.0__react@18.0.0/node_modules/react-use/esm/useSet.js","webpack://_N_E/../../node_modules/.pnpm/react-use@17.5.1_react-dom@18.0.0_react@18.0.0__react@18.0.0/node_modules/react-use/esm/usePrevious.js","webpack://_N_E/./src/pages/index.tsx"],"sourcesContent":["import { __assign, __spreadArrays } from \"tslib\";\nimport { useCallback, useMemo, useState } from 'react';\nvar useSet = function (initialSet) {\n    if (initialSet === void 0) { initialSet = new Set(); }\n    var _a = useState(initialSet), set = _a[0], setSet = _a[1];\n    var stableActions = useMemo(function () {\n        var add = function (item) { return setSet(function (prevSet) { return new Set(__spreadArrays(Array.from(prevSet), [item])); }); };\n        var remove = function (item) {\n            return setSet(function (prevSet) { return new Set(Array.from(prevSet).filter(function (i) { return i !== item; })); });\n        };\n        var toggle = function (item) {\n            return setSet(function (prevSet) {\n                return prevSet.has(item)\n                    ? new Set(Array.from(prevSet).filter(function (i) { return i !== item; }))\n                    : new Set(__spreadArrays(Array.from(prevSet), [item]));\n            });\n        };\n        return { add: add, remove: remove, toggle: toggle, reset: function () { return setSet(initialSet); }, clear: function () { return setSet(new Set()); } };\n    }, [setSet]);\n    var utils = __assign({ has: useCallback(function (item) { return set.has(item); }, [set]) }, stableActions);\n    return [set, utils];\n};\nexport default useSet;\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n","import { useBoolean } from '@literal-ui/hooks'\nimport clsx from 'clsx'\nimport { useLiveQuery } from 'dexie-react-hooks'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport React, { useEffect, useState } from 'react'\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdCheckCircle,\n  MdOutlineFileDownload,\n  MdOutlineShare,\n} from 'react-icons/md'\nimport { useSet } from 'react-use'\nimport { usePrevious } from 'react-use'\n\nimport { ReaderGridView, Button, TextField, DropZone } from '../components'\nimport { BookRecord, CoverRecord, db } from '../db'\nimport { addFile, fetchBook, handleFiles } from '../file'\nimport {\n  useDisablePinchZooming,\n  useLibrary,\n  useMobile,\n  useRemoteBooks,\n  useRemoteFiles,\n  useTranslation,\n} from '../hooks'\nimport { reader, useReaderSnapshot } from '../models'\nimport { lock } from '../styles'\nimport { dbx, pack, uploadData } from '../sync'\nimport { copy } from '../utils'\n\nconst placeholder = `data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1 1\"><rect fill=\"gray\" fill-opacity=\"0\" width=\"1\" height=\"1\"/></svg>`\n\nconst SOURCE = 'src'\n\nexport default function Index() {\n  const { focusedTab } = useReaderSnapshot()\n  const router = useRouter()\n  const src = new URL(window.location.href).searchParams.get(SOURCE)\n  const [loading, setLoading] = useState(!!src)\n\n  useDisablePinchZooming()\n\n  useEffect(() => {\n    let src = router.query[SOURCE]\n    if (!src) return\n    if (!Array.isArray(src)) src = [src]\n\n    Promise.all(\n      src.map((s) =>\n        fetchBook(s).then((b) => {\n          reader.addTab(b)\n        }),\n      ),\n    ).finally(() => setLoading(false))\n  }, [router.query])\n\n  useEffect(() => {\n    if ('launchQueue' in window && 'LaunchParams' in window) {\n      window.launchQueue.setConsumer((params) => {\n        console.log('launchQueue', params)\n        if (params.files.length) {\n          Promise.all(params.files.map((f) => f.getFile()))\n            .then((files) => handleFiles(files))\n            .then((books) => books.forEach((b) => reader.addTab(b)))\n        }\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    router.beforePopState(({ url }) => {\n      if (url === '/') {\n        reader.clear()\n      }\n      return true\n    })\n  }, [router])\n\n  return (\n    <>\n      <Head>\n        {/* https://github.com/microsoft/vscode/blob/36fdf6b697cba431beb6e391b5a8c5f3606975a1/src/vs/code/browser/workbench/workbench.html#L16 */}\n        {/* Disable pinch zooming */}\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\"\n        />\n        <title>{focusedTab?.title ?? 'Flow'}</title>\n      </Head>\n      <ReaderGridView />\n      {loading || <Library />}\n    </>\n  )\n}\n\nconst Library: React.FC = () => {\n  const books = useLibrary()\n  const covers = useLiveQuery(() => db?.covers.toArray() ?? [])\n  const t = useTranslation('home')\n\n  const { data: remoteBooks, mutate: mutateRemoteBooks } = useRemoteBooks()\n  const { data: remoteFiles, mutate: mutateRemoteFiles } = useRemoteFiles()\n  const previousRemoteBooks = usePrevious(remoteBooks)\n  const previousRemoteFiles = usePrevious(remoteFiles)\n\n  const [select, toggleSelect] = useBoolean(false)\n  const [selectedBookIds, { add, has, toggle, reset }] = useSet<string>()\n\n  const [loading, setLoading] = useState<string | undefined>()\n  const [readyToSync, setReadyToSync] = useState(false)\n\n  const { groups } = useReaderSnapshot()\n\n  useEffect(() => {\n    if (previousRemoteFiles && remoteFiles) {\n      // to remove effect dependency `books`\n      db?.books.toArray().then((books) => {\n        if (books.length === 0) return\n\n        const newRemoteBooks = remoteFiles.map((f) =>\n          books.find((b) => b.name === f.name),\n        ) as BookRecord[]\n\n        uploadData(newRemoteBooks)\n        mutateRemoteBooks(newRemoteBooks, { revalidate: false })\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mutateRemoteBooks, remoteFiles])\n\n  useEffect(() => {\n    if (!previousRemoteBooks && remoteBooks) {\n      db?.books.bulkPut(remoteBooks).then(() => setReadyToSync(true))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remoteBooks])\n\n  useEffect(() => {\n    if (!remoteFiles || !readyToSync) return\n\n    db?.books.toArray().then(async (books) => {\n      for (const remoteFile of remoteFiles) {\n        const book = books.find((b) => b.name === remoteFile.name)\n        if (!book) continue\n\n        const file = await db?.files.get(book.id)\n        if (file) continue\n\n        setLoading(book.id)\n        await dbx\n          .filesDownload({ path: `/files/${remoteFile.name}` })\n          .then((d) => {\n            const blob: Blob = (d.result as any).fileBlob\n            return addFile(book.id, new File([blob], book.name))\n          })\n        setLoading(undefined)\n      }\n    })\n  }, [readyToSync, remoteFiles])\n\n  useEffect(() => {\n    if (!select) reset()\n  }, [reset, select])\n\n  if (groups.length) return null\n  if (!books) return null\n\n  const selectedBooks = [...selectedBookIds].map(\n    (id) => books.find((b) => b.id === id)!,\n  )\n  const allSelected = selectedBookIds.size === books.length\n\n  return (\n    <DropZone\n      className=\"scroll-parent h-full p-4\"\n      onDrop={(e) => {\n        const bookId = e.dataTransfer.getData('text/plain')\n        const book = books.find((b) => b.id === bookId)\n        if (book) reader.addTab(book)\n\n        handleFiles(e.dataTransfer.files)\n      }}\n    >\n      <div className=\"mb-4 space-y-2.5\">\n        <div>\n          <TextField\n            name={SOURCE}\n            placeholder=\"https://link.to/remote.epub\"\n            type=\"url\"\n            hideLabel\n            actions={[\n              {\n                title: t('share'),\n                Icon: MdOutlineShare,\n                onClick(el) {\n                  if (el?.reportValidity()) {\n                    copy(`${window.location.origin}/?${SOURCE}=${el.value}`)\n                  }\n                },\n              },\n              {\n                title: t('download'),\n                Icon: MdOutlineFileDownload,\n                onClick(el) {\n                  if (el?.reportValidity()) fetchBook(el.value)\n                },\n              },\n            ]}\n          />\n        </div>\n        <div className=\"flex items-center justify-between gap-4\">\n          <div className=\"space-x-2\">\n            {books.length ? (\n              <Button variant=\"secondary\" onClick={toggleSelect}>\n                {t(select ? 'cancel' : 'select')}\n              </Button>\n            ) : (\n              <Button\n                variant=\"secondary\"\n                disabled={!books}\n                onClick={() => {\n                  fetchBook(\n                    'https://epubtest.org/books/Fundamental-Accessibility-Tests-Basic-Functionality-v1.0.0.epub',\n                  )\n                }}\n              >\n                {t('download_sample_book')}\n              </Button>\n            )}\n            {select &&\n              (allSelected ? (\n                <Button variant=\"secondary\" onClick={reset}>\n                  {t('deselect_all')}\n                </Button>\n              ) : (\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => books.forEach((b) => add(b.id))}\n                >\n                  {t('select_all')}\n                </Button>\n              ))}\n          </div>\n\n          <div className=\"space-x-2\">\n            {select ? (\n              <>\n                <Button\n                  onClick={async () => {\n                    toggleSelect()\n\n                    for (const book of selectedBooks) {\n                      const remoteFile = remoteFiles?.find(\n                        (f) => f.name === book.name,\n                      )\n                      if (remoteFile) continue\n\n                      const file = await db?.files.get(book.id)\n                      if (!file) continue\n\n                      setLoading(book.id)\n                      await dbx.filesUpload({\n                        path: `/files/${book.name}`,\n                        contents: file.file,\n                      })\n                      setLoading(undefined)\n\n                      mutateRemoteFiles()\n                    }\n                  }}\n                >\n                  {t('upload')}\n                </Button>\n                <Button\n                  onClick={async () => {\n                    toggleSelect()\n                    const bookIds = [...selectedBookIds]\n\n                    db?.books.bulkDelete(bookIds)\n                    db?.covers.bulkDelete(bookIds)\n                    db?.files.bulkDelete(bookIds)\n\n                    // folder data is not updated after `filesDeleteBatch`\n                    mutateRemoteFiles(\n                      async (data) => {\n                        await dbx.filesDeleteBatch({\n                          entries: selectedBooks.map((b) => ({\n                            path: `/files/${b.name}`,\n                          })),\n                        })\n                        return data?.filter(\n                          (f) => !selectedBooks.find((b) => b.name === f.name),\n                        )\n                      },\n                      { revalidate: false },\n                    )\n                  }}\n                >\n                  {t('delete')}\n                </Button>\n              </>\n            ) : (\n              <>\n                <Button\n                  variant=\"secondary\"\n                  disabled={!books.length}\n                  onClick={pack}\n                >\n                  {t('export')}\n                </Button>\n                <Button className=\"relative\">\n                  <input\n                    type=\"file\"\n                    accept=\"application/epub+zip,application/epub,application/zip\"\n                    className=\"absolute inset-0 cursor-pointer opacity-0\"\n                    onChange={(e) => {\n                      const files = e.target.files\n                      if (files) handleFiles(files)\n                    }}\n                  />\n                  {t('import')}\n                </Button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"scroll h-full\">\n        <ul\n          className=\"grid\"\n          style={{\n            gridTemplateColumns: `repeat(auto-fill, minmax(calc(80px + 3vw), 1fr))`,\n            columnGap: lock(16, 32),\n            rowGap: lock(24, 40),\n          }}\n        >\n          {books.map((book) => (\n            <Book\n              key={book.id}\n              book={book}\n              covers={covers}\n              select={select}\n              selected={has(book.id)}\n              loading={loading === book.id}\n              toggle={toggle}\n            />\n          ))}\n        </ul>\n      </div>\n    </DropZone>\n  )\n}\n\ninterface BookProps {\n  book: BookRecord\n  covers?: CoverRecord[]\n  select?: boolean\n  selected?: boolean\n  loading?: boolean\n  toggle: (id: string) => void\n}\nconst Book: React.FC<BookProps> = ({\n  book,\n  covers,\n  select,\n  selected,\n  loading,\n  toggle,\n}) => {\n  const remoteFiles = useRemoteFiles()\n\n  const router = useRouter()\n  const mobile = useMobile()\n\n  const cover = covers?.find((c) => c.id === book.id)?.cover\n  const remoteFile = remoteFiles.data?.find((f) => f.name === book.name)\n\n  const Icon = selected ? MdCheckBox : MdCheckBoxOutlineBlank\n\n  return (\n    <div className=\"relative flex flex-col\">\n      <div\n        role=\"button\"\n        className=\"border-inverse-on-surface relative border\"\n        onClick={async () => {\n          if (select) {\n            toggle(book.id)\n          } else {\n            if (mobile) await router.push('/_')\n            reader.addTab(book)\n          }\n        }}\n      >\n        <div\n          className={clsx(\n            'absolute bottom-0 h-1 bg-blue-500',\n            loading && 'progress-bit w-[5%]',\n          )}\n        />\n        {book.percentage !== undefined && (\n          <div className=\"typescale-body-large absolute right-0 bg-gray-500/60 px-2 text-gray-100\">\n            {(book.percentage * 100).toFixed()}%\n          </div>\n        )}\n        <img\n          src={cover ?? placeholder}\n          alt=\"Cover\"\n          className=\"mx-auto aspect-[9/12] object-cover\"\n          draggable={false}\n        />\n        {select && (\n          <div className=\"absolute bottom-1 right-1\">\n            <Icon\n              size={24}\n              className={clsx(\n                '-m-1',\n                selected ? 'text-tertiary' : 'text-outline',\n              )}\n            />\n          </div>\n        )}\n      </div>\n\n      <div\n        className=\"line-clamp-2 text-on-surface-variant typescale-body-small lg:typescale-body-medium mt-2 w-full\"\n        title={book.name}\n      >\n        <MdCheckCircle\n          className={clsx(\n            'mr-1 mb-0.5 inline',\n            remoteFile ? 'text-tertiary' : 'text-surface-variant',\n          )}\n          size={16}\n        />\n        {book.name}\n      </div>\n    </div>\n  )\n}\n"],"names":["initialSet","Set","_a","useState","set","setSet","stableActions","useMemo","add","item","prevSet","__spreadArrays","Array","from","remove","filter","i","toggle","has","reset","clear","utils","__assign","useCallback","usePrevious","state","ref","useRef","useEffect","current","SOURCE","Index","focusedTab","useReaderSnapshot","router","useRouter","src","URL","window","location","href","searchParams","get","loading","setLoading","useDisablePinchZooming","query","isArray","Promise","all","map","s","fetchBook","then","b","reader","finally","launchQueue","setConsumer","params","console","log","files","length","f","getFile","handleFiles","books","forEach","beforePopState","url","Head","meta","name","content","title","ReaderGridView","Library","db","useLibrary","covers","useLiveQuery","t","useTranslation","useRemoteBooks","data","mutate","useRemoteFiles","previousRemoteBooks","remoteBooks","previousRemoteFiles","remoteFiles","useBoolean","select","toggleSelect","useSet","selectedBookIds","readyToSync","setReadyToSync","groups","newRemoteBooks","find","uploadData","mutateRemoteBooks","revalidate","remoteFile","book","id","dbx","path","d","blob","result","fileBlob","addFile","File","undefined","selectedBooks","allSelected","size","DropZone","className","onDrop","e","bookId","dataTransfer","getData","div","TextField","placeholder","type","hideLabel","actions","Icon","MdOutlineShare","onClick","el","reportValidity","copy","origin","value","MdOutlineFileDownload","Button","variant","disabled","file","contents","mutateRemoteFiles","bookIds","entries","pack","input","accept","onChange","target","ul","style","gridTemplateColumns","columnGap","lock","rowGap","Book","selected","mobile","useMobile","cover","c","MdCheckBox","MdCheckBoxOutlineBlank","role","push","clsx","percentage","toFixed","img","alt","draggable","MdCheckCircle"],"sourceRoot":""}